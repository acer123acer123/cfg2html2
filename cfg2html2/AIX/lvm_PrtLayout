#!/bin/ksh93
######################################################################
# PrtLayout: ...
######################################################################
   DEBUG=0  # debugging 0=OFF 1=ON

   VGS="$1"
   if (( $# == 0 )); then
      VGS=$(lsvg | awk '{print $1}')
   fi

   if [[ "$2" != "" ]]; then
      MAN_LV="$2"
   fi

   DB ()
   {
   if (( $DEBUG == 1 )); then
      # tee -a will "add" the output to a file
      # BUG >AW301< DB_F currently NOT DEFINED
      echo $* | tee -a $DB_F
   fi
   }  ## DEBUG MODE ##

   COL ()   ########## ( put var on positions )
   {
      case $1 in
      1)
       shift
       echo $* | awk '{printf("%10s%10s%9s%9s%16s%23s\n",$1,$2,$3,$4,$5,$6 )}'
       ;;
      2)
       shift
       echo $* | awk '{printf("%10s%5s%7s%9s%5s%2s%-17s\n",$1,$2,$3,$4,$5," ",$6 )}'
       ;;
      3)
       shift
       echo $* | awk '{printf("%47s%8s%22s\n",$1,$2,$3 )}'
       ;;
      esac
   }

   DB [-]  running on debug mode

   L0="=========================================================================="
   L1="--------------------------------------------------------------------------"
   PID=$(echo $$)
   PDD=$(date "+%y%m%d")

   DB [1] $PID $PDD

   ## create PHD list ###
   if lsdev -Cc pdisk | grep pdisk >/dev/null
   then
      >/tmp/PHD.tmp
      lsdev -Cc pdisk | awk '{print $1}' | while read PHD
      do
       echo " $PHD $(lsattr -l $PHD -E -a=connwhere_shad 2>/dev/null | \
		awk '{print $2}') " >> /tmp/PHD.tmp
      done
   fi  ##############

   for VG in $VGS    ### check per Volume group #########
   do
      D=$(date "+%D")
      NAME=$(uname -n)
      PP=$(lsvg $VG 2>/dev/null | awk '/SIZE/ {print $6}')

      ######### PRINT VG #####
      echo "-*-"$L0
      echo " | $VG    PPsize:$PP                  date: $D      from: $NAME "
      echo " + $L1"
      #######################
      HDS=$(lspv 2>/dev/null | grep $VG | awk '{print $1}')

      DB [2] HDS= $HDS

      COL 1 Logical Physical  Tot_Mb Used_Mb location [Free_distribution]

      for HD in $HDS
      do
       CAP=$(lspv $HD 2>/dev/null | awk '/PPs/{print $4}' | cut -c2-)
       echo $CAP | read TOT_MB USED_MB USE_C  ## CAP p/ disk
       lsvg -p $VG 2>/dev/null | awk "/$HD/{print \$5}" | sed s'/\.\./:/g' | \
       awk -F: '{printf("%.3d:%.3d:%.3d:%.3d:%.3d\n",$1,$2,$3,$4,$5)}' | \
		read FREE_DISTR
       ### convert HDS PDS
       if lsattr -l $HD -E -a=connwhere_shad 2>/dev/null >/dev/null
       then
          CWiD=$(lsattr -l $HD -E -a=connwhere_shad | awk '{print $2}')
          awk "/$CWiD/{print \$1}" </tmp/PHD.tmp | read ITEM
          PD=$(lsdev -Cc pdisk | grep "$ITEM " | awk '{print $1}')
       else
          PD="$HD"
       fi
       #### end convert ###

       lsdev -Cc disk | awk "/$HD/{print \$3}" | read LOC

       #####  HD  info #########################################
       COL 1 $HD $PD $TOT_MB $USE_C $LOC $FREE_DISTR
       #############################################################

       DB [3]  "${PID}_${PDD} ${VG}_${HD} $PD  $TOT_MB $USED_MB $LOC $FREE_DISTR "
      done

      if [[ "$MAN_LV" = "" ]]; then
       LVS=$(lsvg -l $VG 2>/dev/null | egrep -v "$VG|NAM"| \
	awk '{print $1"_"$2"_"$3}') # gen LVS
      else
       if lsvg -l $VG | grep "$MAN_LV" >/dev/null ; then
          LVS=$(lsvg -l $VG | egrep -v "$VG|NAM"| grep "$MAN_LV" | \
		awk '{print $1"_"$2"_"$3}') # gen LVS
       else
          echo " \n ERROR :  $MAN_LV   not on $VG ! \n"
          xexit  # >AW018<
       fi
      fi

      echo "   $L1 \n"

      ########################################## show ############
      COL 2 LVname LPs FStype Size used FS
      ############################################################

      for RLV in $LVS
      do
       echo  $RLV | awk -F_ '{print $1,$2,$3}' | read LV TLV LP
       B_SZ=$(expr $LP \* $PP)
       case $TLV in
          jfs|jfs2)
             lsfs | awk "/$LV/{print \$5,\$3}" | read SZK MP
             if [[ "$SZK" = "" ]]; then
              SZ="${B_SZ}MB"
              TLV="-"
             else
              SZ=$(expr $SZK / 2048 2>/dev/null)
              if [[ "$B_SZ" != "$SZ" ]]; then
               SZ="->${SZ}MB"  ## warning: fs-size < lv-size
              else
               SZ="${SZ}MB"
              fi
             fi
             df | awk "/$LV/{print \$4}" | read PRC

             if [[ "$PRC" = "" ]]; then
              PRC="n/a"
             fi
             ;;
          paging)
             lsps -a | grep "$LV" | grep "$VG" | awk '{print $4,$5"%"}' | read SZ PRC
             ;;
          *)
             SZ=" "
             PRC=" "
             MP=" "
             ;;
       esac

       ############### show LV  info ####################
       COL 2 $LV  $LP  $TLV  $SZ  $PRC $MP
       ##################################################
       lslv -m $LV 2>/dev/null | egrep -v "LP" | awk '{print $3,$5,$7}' | \
	sort | uniq | while read A B C
        do
          echo $A >>/tmp/PV_1
          echo $B >>/tmp/PV_2
          echo $C >>/tmp/PV_3
        done

       for C in 1 2 3
       do
          [ -f /tmp/PV_${C} ] && cat /tmp/PV_${C} | sort | uniq | while read PV
          do
             if [[ "$PV" != "" ]]; then
             lslv -l $LV 2>/dev/null | awk "/$PV/{print \$4}" | sed 's/000/---/g' | \
		 read PPP

             DB [4]  " PPP = $PPP "

             if [[ "$C" = "1" ]]; then
              Y="+"
              PRE_PV="$PV"
             else
              Y="copy_$C"
              if [[ "$PRE_PV" = "$PV" ]]; then
                 PPP=$(echo $PPP | tr "0-9" "|||||||||")
              fi
             fi

             if lspv | grep $PV >/dev/null ; then  ## if hdisk not avail
              :
             else
              PV="N/A"
             fi

             ########## show PV position  #####
             COL 3  $Y   $PV   $PPP
             ######################################

             DB [5]  "${PID}_${PDD} ${VG}_${PV} $LV $LP $TLV $SZ $PRC $MP $Y $PV $PPP "
             fi
          done
       done

       rm -f /tmp/PV_? 2>/dev/null  # >AW004<
      done

      echo
   done

   rm -f /tmp/PHD.tmp 2>/dev/null  # >AW004<
